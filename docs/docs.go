// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-05-07 15:00:16.85721663 +0900 JST m=+0.024678072

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "gin-swaggerを試すためのAPI",
        "title": "gin-swaggerサンプルAPI",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "@yukpiz",
            "url": "https://twitter.com/yukpiz",
            "email": "yukpiz@gmail.com"
        },
        "license": {
            "name": "WTFPL",
            "url": "http://www.wtfpl.net/"
        },
        "version": "1"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/hello": {
            "get": {
                "description": "ログに\"Hello\"と出力します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "タグ1"
                ],
                "summary": "APIのサマリー説明",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "パラメータの説明",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "パラメータの説明",
                        "name": "merchant_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功レスポンスの説明",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "失敗レスポンスの説明",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
